<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="PostCleanup">

	<!-- IMPORTS -->
	<PropertyGroup>
		<MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\tools\MSBuildCommunityTasks</MSBuildCommunityTasksPath>
		<MSBuildUmbracoTasksPath>$(MSBuildProjectDirectory)\tools\MSBuildUmbracoTasks</MSBuildUmbracoTasksPath>
		<MSBuildNugetTasksPath>$(MSBuildProjectDirectory)\tools\MSBuildNugetTasks</MSBuildNugetTasksPath>
		<AppVeyorUmbracoPath>$(MSBuildProjectDirectory)\tools\AppVeyorUmbraco</AppVeyorUmbracoPath>
	</PropertyGroup>

	<Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets" />
	<Import Project="$(MSBuildUmbracoTasksPath)\MSBuild.Umbraco.Tasks.Targets" />
	<Import Project="$(MSBuildNugetTasksPath)\MSBuild.NuGet.Tasks.Targets" />
	<Import Project="$(AppVeyorUmbracoPath)\AppVeyorUmbraco.Targets" />
	
	<!-- PROPERTIES -->
	<PropertyGroup>
		<NugetPackageId>Our.Umbraco.Fluidity</NugetPackageId>
		<ProjectName>Fluidity</ProjectName>
		<PackageName>Fluidity</PackageName>
		<Description>A fluent CRUD user interface generator for Umbraco</Description>
		<Owners>Matt Brailsford and contributors</Owners>
		<Authors>Matt Brailsford and contributors</Authors>
		<AuthorUrl>https://github.com/mattbrailsford/umbraco-fluidity</AuthorUrl>
		<PackageLicenseName>Apache 2.0 license</PackageLicenseName>
		<PackageLicenseUrl>https://opensource.org/licenses/Apache-2.0</PackageLicenseUrl>
		<ProjectUrl>https://github.com/mattbrailsford/umbraco-fluidity</ProjectUrl>
		<Copyright>Matt Brailsford and contributors</Copyright>
		<IconUrl>https://raw.githubusercontent.com/mattbrailsford/umbraco-fluidity/master/docs/img/badge_mint.png</IconUrl>
		<RequireLicenseAcceptance>false</RequireLicenseAcceptance>
		<Language>en-GB</Language>
		<Tags>umbraco</Tags>
	</PropertyGroup>

	<!-- APPVEYOR PROPERTIES -->
	<PropertyGroup>
		<FileVersion>$(APPVEYOR_BUILD_VERSION)</FileVersion>
	</PropertyGroup>
	<Choose>
		<When Condition="$(APPVEYOR_BUILD_NUMBER) != '' And $(APPVEYOR_REPO_TAG) != 'true' ">
			<PropertyGroup>
				<Release>false</Release>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<Release>true</Release>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<Choose>
		<When Condition="$(Release) == 'false' And $(UMBRACO_PACKAGE_PRERELEASE_SUFFIX) == 'rtm'">
			<PropertyGroup>
				<AbortBuild>true</AbortBuild>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<AbortBuild>false</AbortBuild>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<!-- PATHS -->
	<PropertyGroup>
		<BuildConfig>Release</BuildConfig>
		<RootDir>$(MSBuildProjectDirectory)\..</RootDir>
		<BuildUmbDir>$(MSBuildProjectDirectory)\_umbraco</BuildUmbDir>
		<BuildNuGetDir>$(MSBuildProjectDirectory)\_nuget</BuildNuGetDir>
		<ArtifactsDir>$(RootDir)\artifacts</ArtifactsDir>
		<ProjectDir>$(RootDir)\src\$(ProjectName)</ProjectDir>
	</PropertyGroup>

	<!-- TARGETS -->
	<Target Name="GetProductVersion">
		<Error Condition="$(AbortBuild) == 'true'" Text="Aborting the build as the UMBRACO_PACKAGE_PRERELEASE_SUFFIX suffix is set 'rtm' but APPVEYOR_REPO_TAG is not 'true'" />
		<GetProductVersion BuildVersion="$(APPVEYOR_BUILD_VERSION)" BuildSuffix="$(UMBRACO_PACKAGE_PRERELEASE_SUFFIX)" Release="$(Release)">
			<Output TaskParameter="ProductVersion" PropertyName="ProductVersion"/>
		</GetProductVersion>
	</Target>

	<!-- CLEAN -->
	<Target Name="Clean" DependsOnTargets="GetProductVersion">
		<RemoveDir Directories="$(BuildUmbDir)" Condition="Exists('$(BuildUmbDir)')" />
		<RemoveDir Directories="$(BuildNuGetDir)" Condition="Exists('$(BuildNuGetDir)')" />
		<RemoveDir Directories="$(ArtifactsDir)" Condition="Exists('$(ArtifactsDir)')" />
		<MakeDir Directories="$(BuildUmbDir)" />
		<MakeDir Directories="$(BuildNuGetDir)" />
		<MakeDir Directories="$(ArtifactsDir)" />
	</Target>

	<!-- UPDATE ASSEMBLEY VERSION -->
	<Target Name="UpdateAssemblyInfo" DependsOnTargets="Clean">
		<ItemGroup>
			<VersionMajor Include="$(ProductVersion.Split('.')[0])" />
			<VersionMinor Include="$(ProductVersion.Split('.')[1])" />
		</ItemGroup>
		<AssemblyInfo CodeLanguage="CS"
			OutputFile="$(ProjectDir)\Properties\VersionInfo.cs"
			AssemblyVersion="@(VersionMajor).@(VersionMinor).*"
			AssemblyInformationalVersion="$(ProductVersion)"/>
	</Target>

	<!-- COMPILE -->
	<Target Name="Compile" DependsOnTargets="UpdateAssemblyInfo">
		<MSBuild Projects="$(ProjectDir)\$(ProjectName).csproj" Properties="Configuration=$(BuildConfig)" />
	</Target>

	<!-- PREPARE FILES -->
	<Target Name="PrepareFiles" DependsOnTargets="Compile">
		<ItemGroup>
			<BinFiles Include="$(ProjectDir)\bin\$(BuildConfig)\$(ProjectName).dll" />
			<PdbFiles Include="$(ProjectDir)\bin\$(BuildConfig)\$(ProjectName).pdb" />
			<SrcFiles Include="$(ProjectDir)\**\*.cs" Exclude="$(ProjectDir)\obj\**"/>
			<PluginFiles Include="$(ProjectDir)\Web\UI\**\*.*" />
			<PackageFile Include="$(MSBuildProjectDirectory)\package.xml" />
			<NuSpecFiles Include="$(MSBuildProjectDirectory)\package*.nuspec" />
			<NugetReadmeFile Include="$(MSBuildProjectDirectory)\readme.txt" />
		</ItemGroup>
		<!-- Umbraco -->
		<Copy SourceFiles="@(BinFiles)" DestinationFolder="$(BuildUmbDir)\bin" />
		<Copy SourceFiles="@(PackageFile)" DestinationFolder="$(BuildUmbDir)" />
		<Copy SourceFiles="@(PluginFiles)" DestinationFiles="@(PluginFiles->'$(BuildUmbDir)\%(RecursiveDir)%(Filename)%(Extension)')" />
		<!-- Nuget -->
		<Copy SourceFiles="@(BinFiles)" DestinationFolder="$(BuildNuGetDir)\lib\net45" />
		<Copy SourceFiles="@(PdbFiles)" DestinationFolder="$(BuildNuGetDir)\lib\net45" />
		<Copy SourceFiles="@(PluginFiles)" DestinationFiles="@(PluginFiles->'$(BuildNuGetDir)\content\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(SrcFiles)" DestinationFiles="@(SrcFiles->'$(BuildNuGetDir)\src\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(NuSpecFiles)" DestinationFolder="$(BuildNuGetDir)" />
		<Copy SourceFiles="@(NugetReadmeFile)" DestinationFolder="$(BuildNuGetDir)" />
	</Target>

	<!-- MANIFEST UMBRACO -->
	<Target Name="ManifestUmbraco" DependsOnTargets="PrepareFiles">
		<ItemGroup>
			<UmbracoManifestFiles Include="$(BuildUmbDir)\**\*" Exclude="$(BuildUmbDir)\package.xml" />
		</ItemGroup>
		<ManifestUpdate
			ManifestFile="$(BuildUmbDir)\package.xml"
			WorkingDirectory="$(BuildUmbDir)"
			MinimumRequiredUmbracoVersion="$(MinUmbracoVersion)"
			PackageName="$(PackageName)"
			PackageVersion="$(ProductVersion)"
			AuthorName="$(Authors)"
			AuthorUrl="$(AuthorUrl)"
			Readme="$(Description)"
			PackageLicenseName="$(PackageLicenseName)"
			PackageLicenseUrl="$(PackageLicenseUrl)"
			PackageUrl="$(ProjectUrl)"
			Files="@(UmbracoManifestFiles)" />
	</Target>

	<!-- MANIFEST FOR NUGET PACKAGE -->
	<Target Name="ManifestNuGet" DependsOnTargets="PrepareFiles">
		<ItemGroup>
			<CoreNuGetManifestFiles Include="$(BuildNuGetDir)\**\*" Exclude="$(BuildNuGetDir)\package.nuspec;$(BuildNuGetDir)\package.core.nuspec;$(BuildNuGetDir)\content\**\*.*" />
			<NuGetManifestFiles Include="$(BuildNuGetDir)\**\*" Exclude="$(BuildNuGetDir)\package.nuspec;$(BuildNuGetDir)\package.core.nuspec;$(BuildNuGetDir)\lib\**\*.*;$(BuildNuGetDir)\src\**\*.*" />
		</ItemGroup>
		<!-- Core -->
		<MSBuild.NuGet.Tasks.ManifestUpdate
			ManifestFile="$(BuildNuGetDir)\package.core.nuspec"
			WorkingDirectory="$(BuildNuGetDir)"
			Title="$(PackageName) Core"
			Description="$(Description)"
			Summary="$(Description)"
			Version="$(ProductVersion)"
			MinimumRequiredUmbracoVersion ="$(MinUmbracoVersion)"
			Authors="$(Authors)"
			Owners="$(Owners)"
			Copyright="$(Copyright)"
			LicenseUrl="$(PackageLicenseUrl)"
			ProjectUrl="$(ProjectUrl)"
			Id="$(NugetPackageId).Core"
			IconUrl="$(IconUrl)"
			Language="$(Language)"
			RequireLicenseAcceptance="$(RequireLicenseAcceptance)"
			Tags="$(Tags)"
			Files="@(CoreNuGetManifestFiles)" />
		<!-- Web -->
		<MSBuild.NuGet.Tasks.ManifestUpdate
			ManifestFile="$(BuildNuGetDir)\package.nuspec"
			WorkingDirectory="$(BuildNuGetDir)"
			Title="$(PackageName)"
			Description="$(Description)"
			Summary="$(Description)"
			Version="$(ProductVersion)"
			MinimumRequiredUmbracoVersion ="$(MinUmbracoVersion)"
			Authors="$(Authors)"
			Owners="$(Owners)"
			Copyright="$(Copyright)"
			LicenseUrl="$(PackageLicenseUrl)"
			ProjectUrl="$(ProjectUrl)"
			Id="$(NugetPackageId)"
			IconUrl="$(IconUrl)"
			Language="$(Language)"
			RequireLicenseAcceptance="$(RequireLicenseAcceptance)"
			Tags="$(Tags)"
			Files="@(NuGetManifestFiles)" />
		<!-- Update the core dependency version. Have to use XMLUpdate as MSBuild.Nuget doesn't support this yet -->
		<XmlUpdate
			Prefix="nu"
			Namespace="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd"
			XmlFileName="$(BuildNuGetDir)\package.nuspec"
			XPath="/nu:package/nu:metadata/nu:dependencies/nu:dependency[@id='$(PackageId).Core']/@version"
			Value="$(ProductVersion)" />
	</Target>

	<!-- PACKAGE -->
	<Target Name="Package" DependsOnTargets="ManifestUmbraco; ManifestNuGet">
		<ItemGroup>
			<UmbracoManifestFiles Include="$(BuildUmbDir)\**\*.*" />
		</ItemGroup>
		<!-- Umbraco -->
		<Package ManifestFile="$(BuildUmbDir)\package.xml"
			WorkingDirectory="$(BuildUmbDir)"
			OutputDirectory="$(ArtifactsDir)"
			Files="@(UmbracoManifestFiles)" />
		<!-- NuGet Core -->
		<MSBuild.NuGet.Tasks.Pack NuGetExePath="$(MSBuildProjectDirectory)\tools\NuGet.exe"
			ManifestFile="$(BuildNuGetDir)\package.core.nuspec"
			BasePath="$(BuildNuGetDir)"
			Version="$(Version)"
			OutputDirectory="$(ArtifactsDir)"
			Symbols="true"  />
		<!-- NuGet -->
		<MSBuild.NuGet.Tasks.Pack NuGetExePath="$(MSBuildProjectDirectory)\tools\NuGet.exe"
			ManifestFile="$(BuildNuGetDir)\package.nuspec"
			BasePath="$(BuildNuGetDir)"
			Version="$(Version)"
			OutputDirectory="$(ArtifactsDir)"
			Symbols="false" />
	</Target>

	<Target Name="PostCleanup" DependsOnTargets="Package">
		<RemoveDir Directories="$(BuildUmbDir)" Condition="Exists('$(BuildUmbDir)')" />
		<RemoveDir Directories="$(BuildNuGetDir)" Condition="Exists('$(BuildNuGetDir)')" />
	</Target>

</Project>